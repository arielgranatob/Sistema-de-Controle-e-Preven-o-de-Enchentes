/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Dao.BaciasHidrograficasDAO;
import Dao.EnderecosDAO;
import Dao.RiosDAO;
import Model.BaciaHidrografica;
import Model.Endereco;
import Model.Rio;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.JTextField;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author italo
 */
public class JFrmEditarRio extends javax.swing.JFrame {

    private String sql;
    private Connection conn;
    JFrmTableRio listarRios = null;
    int codRio = 0;

    /**
     * Creates new form JFrmCadastroAluno
     */
    public JFrmEditarRio() {
        initComponents();
        this.setLocationRelativeTo(null);

    }

    JFrmEditarRio(int codRio, JFrmTableRio listarRios) {
        initComponents();
        this.listarRios = listarRios;
        carregarDadosBaciaHidrografica();
        carregarDadosEndereco();
        preencherDadosRioSelecionado(codRio);
        this.codRio = codRio;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitulo = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jLabelCpf = new javax.swing.JLabel();
        jLabelCidade = new javax.swing.JLabel();
        jButtonCadastrar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBoxEndereco = new javax.swing.JComboBox<>();
        jComboBoxBaciaHidrografica = new javax.swing.JComboBox<>();
        jTextFieldNome = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTitulo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelTitulo.setText("EDITAR RIO");

        jLabelNome.setText("ENDEREÃ‡O:");

        jLabelCpf.setText("BACIA HIDROGRAFICA:");

        jLabelCidade.setText("NOME DO RIO: ");

        jButtonCadastrar.setText("EDITAR");
        jButtonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadastrarActionPerformed(evt);
            }
        });

        jButton2.setText("CANCELAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelNome)
                            .addComponent(jLabelCpf)
                            .addComponent(jLabelCidade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxEndereco, 0, 507, Short.MAX_VALUE)
                            .addComponent(jComboBoxBaciaHidrografica, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldNome)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(jButtonCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelTitulo)
                .addGap(322, 322, 322))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabelTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNome)
                    .addComponent(jComboBoxEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCpf)
                    .addComponent(jComboBoxBaciaHidrografica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCidade)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCadastrar)
                    .addComponent(jButton2))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadastrarActionPerformed

        String caracteresEndereco[] = null;
        String caracteresBaciaHidrografica[] = null;

        Rio rio = new Rio();

        String codigoEndereco = String.valueOf(jComboBoxEndereco.getSelectedItem());
        caracteresEndereco = codigoEndereco.split("-");

        String codigoBaciaHidrografica = String.valueOf(jComboBoxBaciaHidrografica.getSelectedItem());
        caracteresBaciaHidrografica = codigoBaciaHidrografica.split("-");

        int codEndereco;
        String auxEndereco;
        String tirarEspacoEndereco;

        auxEndereco = caracteresEndereco[0];
        tirarEspacoEndereco = auxEndereco.replaceAll(" ", "");
        codEndereco = Integer.parseInt(tirarEspacoEndereco);

        System.out.println(codEndereco);

        int codBaciaHidrografica;
        String auxBaciaHidrografica;
        String tirarEspacoBaciaHidrografica;

        auxBaciaHidrografica = caracteresBaciaHidrografica[0];
        tirarEspacoBaciaHidrografica = auxBaciaHidrografica.replaceAll(" ", "");
        codBaciaHidrografica = Integer.parseInt(tirarEspacoBaciaHidrografica);

        System.out.println(codBaciaHidrografica);

        rio.setId(codRio);
        rio.setIdEndereco(codEndereco);
        rio.setIdBaciaHidrografica(codBaciaHidrografica);
        rio.setNome(jTextFieldNome.getText());

        RiosDAO riosdao = new RiosDAO();
        riosdao.update(rio);

        listarRios.carregarDados();
        this.dispose();
    }//GEN-LAST:event_jButtonCadastrarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrmEditarRio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrmEditarRio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrmEditarRio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrmEditarRio.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrmEditarRio().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonCadastrar;
    private javax.swing.JComboBox<String> jComboBoxBaciaHidrografica;
    private javax.swing.JComboBox<String> jComboBoxEndereco;
    private javax.swing.JLabel jLabelCidade;
    private javax.swing.JLabel jLabelCpf;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables

    PreparedStatement ps = null;
    ResultSet rs = null;

    public void carregarDadosEndereco() {

        String sql = "SELECT * FROM endereco";
        ArrayList<Endereco> arrayEnderecos = new ArrayList<Endereco>();
        ArrayList<String> comboEnderecos = new ArrayList<String>();

        EnderecosDAO enderecosDAO = new EnderecosDAO();
        arrayEnderecos = enderecosDAO.consulta(sql);

        for (int i = 0; i < arrayEnderecos.size(); i++) {

            comboEnderecos.add(Integer.toString(arrayEnderecos.get(i).getId()) + " - " + arrayEnderecos.get(i).getPais() + ", " + arrayEnderecos.get(i).getEstado() + ", " + arrayEnderecos.get(i).getRegiao() + ", " + arrayEnderecos.get(i).getCidade() + ", " + arrayEnderecos.get(i).getBairro());

        }

        DefaultComboBoxModel defaultComboBox = new DefaultComboBoxModel(comboEnderecos.toArray());
        jComboBoxEndereco.setModel(defaultComboBox);

    }

    public void carregarDadosBaciaHidrografica() {

        String sql = "SELECT * FROM baciaHidrografica";
        ArrayList<BaciaHidrografica> arrayBaciaHidrografica = new ArrayList<BaciaHidrografica>();
        ArrayList<String> comboBaciaHidrograficas = new ArrayList<String>();

        BaciasHidrograficasDAO baciahidrograficaDAO = new BaciasHidrograficasDAO();
        arrayBaciaHidrografica = baciahidrograficaDAO.consulta(sql);

        for (int i = 0; i < arrayBaciaHidrografica.size(); i++) {

            comboBaciaHidrograficas.add(Integer.toString(arrayBaciaHidrografica.get(i).getId()) + " - " + arrayBaciaHidrografica.get(i).getNome());

        }

        DefaultComboBoxModel defaultComboBox = new DefaultComboBoxModel(comboBaciaHidrograficas.toArray());
        jComboBoxBaciaHidrografica.setModel(defaultComboBox);

    }

    public void preencherDadosRioSelecionado(int codRio) {

        String sql = "SELECT rio.*, endereco.*, baciaHidrografica.* FROM rio, endereco, baciaHidrografica WHERE rio.idEndereco=endereco.idEndereco AND rio.idBaciaHidografica=baciaHidrografica.idBaciaHidografica AND rio.idRio =" + codRio;
        ArrayList<Rio> arrayRios = new ArrayList<Rio>();
        RiosDAO riosdao = new RiosDAO();

        arrayRios = riosdao.consulta(sql);
        for (int i = 0; i < arrayRios.size(); i++) {

            jComboBoxEndereco.setSelectedItem(arrayRios.get(i).getIdEndereco() + " - " + arrayRios.get(i).getNomeEndereco());
            jComboBoxBaciaHidrografica.setSelectedItem(arrayRios.get(i).getIdBaciaHidrografica() + " - " + arrayRios.get(i).getNomeBaciaHidrografica());
            jTextFieldNome.setText(arrayRios.get(i).getNome());

            System.out.println(arrayRios.get(i).getIdEndereco() + " - " + arrayRios.get(i).getNomeEndereco());
            System.out.println(Integer.toString(arrayRios.get(i).getIdBaciaHidrografica()) + " - " + arrayRios.get(i).getNomeBaciaHidrografica());
        }

    }
}
